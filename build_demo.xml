<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="ant.demo" default="if.else.test">

	<description>
		1. Compile and build jar
		2. Call customized ant tasks form jar
	</description>


	<!-- properties -->
	<property name="project.root.dir" location="${ant.project.name}/.." />

	<property name="java.src.dir" location="${project.root.dir}/src" />
	<property name="java.libs.dir" location="${project.root.dir}/libs" />

	<property name="java.output.dir" location="${project.root.dir}/output" />
	<property name="java.output.class.dir" location="${java.output.dir}/classes" />
	<property name="java.output.jar.dir" location="${java.output.dir}/jars" />

	<property name="java.jar.name" value="FunSettingsTest.jar" />
	<property name="ant.proerties.name" value="anttask.properties" />


	<!-- targets, compile and build jar -->
	<target name="java.build" depends="setup,build.jar" />

	<!-- targets, setup -->
	<target name="setup" depends="clear,init" />

	<target name="clear" description="Clear files in Java output folder.">
		<delete>
			<fileset dir="${java.output.dir}">
				<include name="classes/**/*.class" />
				<include name="jars/**/*.jar" />
			</fileset>
		</delete>
	</target>

	<target name="verify.file.exist" description="Verify output classes and jars folder exist.">
		<available file="${java.output.class.dir}" property="java.output.class.dir.available" />
		<available file="${java.output.jar.dir}" property="java.output.jar.dir.available" />
		<condition property="java.output.dir.exist">
			<and>
				<istrue value="${java.output.class.dir.available}" />
				<istrue value="${java.output.jar.dir.available}" />
			</and>
		</condition>
	</target>

	<target name="init" depends="verify.file.exist" unless="java.output.dir.exist" description="If necessary, create output folders for classes and jars.">
		<mkdir dir="${java.output.class.dir}" />
		<mkdir dir="${java.output.jar.dir}" />
	</target>

	<!-- targets, build jar package -->
	<target name="build.jar" depends="compile,copy.res,jar" />

	<path id="master.classpath">
		<fileset dir="${java.libs.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<target name="compile" description="Compile Java source to classes.">
		<javac srcdir="${java.src.dir}" destdir="${java.output.class.dir}" source="1.8" target="1.8" encoding="UTF-8" includeantruntime="false" classpathref="master.classpath" />
	</target>

	<target name="copy.res" description="Copy resource files.">
		<copy todir="${java.output.class.dir}">
			<fileset file="${project.root.dir}/${ant.proerties.name}" />
		</copy>
	</target>

	<target name="jar" depends="copy.res" description="Build jar package include classes and resources.">
		<jar destfile="${java.output.jar.dir}/${java.jar.name}" basedir="${java.output.class.dir}">
			<include name="**/*.class" />
			<include name="${ant.proerties.name}" />
		</jar>
	</target>


	<!-- targets, ant demos -->
	<target name="demo.echo">
		<echo>ant demo at ${project.root.dir}</echo>
	</target>

	<!-- call customized ant task -->
	<path id="path.ant.task.jar">
		<pathelement path="${java.output.jar.dir}/${java.jar.name}" />
	</path>
	<taskdef resource="anttask.properties" classpathref="path.ant.task.jar" />

	<target name="ant.self.defined.task01" description="Call customized ant task, and pass args.">
		<anttaskdemo01 message="Message from ant build_demo.xml" />
	</target>

	<!-- call customized ant task -->
	<!-- refer to http://blog.csdn.net/kkdelta/article/details/5678241 -->
	<property name="property.ant.task.jar" location="${java.output.jar.dir}/${java.jar.name}" />
	<taskdef resource="anttask.properties" classpath="${property.ant.task.jar}" />

	<target name="ant.self.defined.task02" description="Call customized ant task, and get args.">
		<!-- define a property with name "myprop" -->
		<anttaskdemo02 property="myprop" />
		<echo message="==> ${myprop}" />
	</target>

	<!-- define macro -->
	<macrodef name="myprint">
		<attribute name="input" />
		<element name="macro.element" optional="yes" />
		<sequential>
			<echo level="info">print @{input}</echo>
			<macro.element />
		</sequential>
	</macrodef>

	<target name="macro.test" description="Call self-defined macro.">
		<myprint input="call macro test">
			<macro.element>
				<echo level="info">exec callback function macro.element</echo>
			</macro.element>
		</myprint>
	</target>

	<!-- import ant file -->
	<property name="ant.import.xml" value="build_import.xml" />
	<property name="path.ant.import.xml" location="${project.root.dir}/${ant.import.xml}" />
	<import file="${path.ant.import.xml}" />

	<target name="import.test" depends="common.echo" description="Invoke properties and targets from import file.">
		<echo>Project desc from import: ${project.desc}</echo>
	</target>

	<!-- subant -->
	<target name="subant.test" description="Define subant to call target from external file.">
		<echo level="info">run the subant task</echo>
		<subant failonerror="true">
			<fileset dir="${project.root.dir}" includes="${ant.import.xml}" />
			<target name="common.echo" />
		</subant>
	</target>

	<!-- if condition -->
	<target name="if.condition.test" description="Tag isset: verify the specified property exist.">
		<property name="exist.test" value="value test" />

		<!-- if property "exist.test" exist, then create property "pro.test" with value "true" -->
		<condition property="pro.test" value="true">
			<isset property="exist.test" />
		</condition>

		<echo level="info">Output: ${pro.test}</echo>
	</target>

	<!-- call customized ant task -->
	<target name="if.else.test" description="call customized ant task, if else condition.">
		<property name="pro.test" value="value.test" />

		<condition property="has.pro.test">
			<and>
				<isset property="pro.test" />
				<length string="${pro.test}" when="greater" length="0" />
			</and>
		</condition>

		<myifelse condition="${has.pro.test}">
			<then>
				<echo level="info">run in if block</echo>
			</then>
			<else>
				<echo level="info">run in else block</echo>
			</else>
		</myifelse>
	</target>

</project>